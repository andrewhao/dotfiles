# Vim direction bindings
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U

# clock
set-window-option -g clock-mode-colour colour64 #green

# http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes
set-option -g default-command "reattach-to-user-namespace -l zsh"

# http://stackoverflow.com/questions/11832199/tmux-set-g-mouse-mode-on-doesnt-wor
# make scrolling with wheels work
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# https://mutelight.org/practical-tmux
# By default, all windows in a session are constrained to the size of the smallest
# client connected to that session, even if both clients are looking at different
# windows. It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client is actively
# looking at it. This behaviour can be fixed by setting tmux's aggressive-resize option.
setw -g aggressive-resize on

# Window split
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Powerline setup
run-shell "powerline-daemon -q"
source "$POWERLINE_PATH/bindings/tmux/powerline.conf"
